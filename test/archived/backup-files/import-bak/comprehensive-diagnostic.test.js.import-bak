/**
 * Comprehensive test diagnostics
 * This file runs tests and provides comprehensive diagnostics
 */

// Regular test functions
test('Basic test functionality works', () => {
  expect(1 + 1).toBe(2);
});

test('Node environment details', () => {
  console.log('Node version:', process.version);
  console.log('Environment:', process.env.NODE_ENV);
  expect(process.version).toBeDefined();
});

// Test file system access
test('File system access using fs core module', () => {
  const fs = require('fs');
  const path = require('path');
  
  try {
    const files = fs.readdirSync(process.cwd());
    console.log('Files in CWD:', files.slice(0, 5), '...');
    expect(files.length).toBeGreaterThan(0);
  } catch (err) {
    console.error('FS error:', err);
    throw err;
  }
});

// Test module imports
test('Module import system works', () => {
  const moduleType = typeof require('path');
  console.log('Module type:', moduleType);
  expect(moduleType).toBe('object');
});

// Test Jest mocking
test('Jest mocking functionality works', () => {
  const mockFn = jest.fn();
  mockFn('test');
  expect(mockFn).toHaveBeenCalledWith('test');
});

// Test async functionality
test('Async/await works', async () => {
  const result = await Promise.resolve(42);
  expect(result).toBe(42);
});

// Create a class to test
class Calculator {
  add(a, b) { return a + b; }
  subtract(a, b) { return a - b; }
}

// Test a class
describe('Class functionality works', () => {
  let calc;
  
  beforeEach(() => {
    calc = new Calculator();
  });
  
  it('can add numbers', () => {
    expect(calc.add(2, 3)).toBe(5);
  });
  
  it('can subtract numbers', () => {
    expect(calc.subtract(5, 2)).toBe(3);
  });
});
